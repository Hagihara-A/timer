{"version":3,"sources":["actions.ts","components/AddTimerDialog.tsx","utils.ts","components/Timer/TimerList.tsx","components/Timer/TimerListButtons.tsx","components/Tree/EditableContent.tsx","components/Tree/TimerTree.tsx","components/Tree/TimerTreeButtons.tsx","components/main.tsx","serviceWorker.js","initState.ts","reducers/timersReducer.ts","reducers/treeReducer.ts","reducers/rootReducer.ts","store.js","index.tsx"],"names":["actionTypes","addTime","type","payload","editTimer","editItemId","data","useStyles","makeStyles","root","margin","AddTimerDialog","open","onClose","onSubmit","classes","useState","timeLimit","setTimeLimit","power","setPower","Dialog","DialogTitle","DialogContent","TextField","value","onChange","e","Number","target","variant","label","inputProps","min","className","DialogActions","Button","onClick","comment","isSection","isTimer","AnimatedTyporaphy","animated","Typography","TimerList","timers","useSelector","state","timerList","focus","currentTimerIndex","ListItems","useSprings","length","map","_","index","fontSize","spring","idx","item","repeat","count","style","key","id","elapsedTime","textAlign","useIconStyles","TimerListIcons","onClickStart","onClickSkip","onClickStop","onClickReset","isElapsing","setIsElapsing","IconButton","color","EditableInput","isEditing","setIsEditing","onKeyDown","keyCode","onBlur","EditableSection","dispatch","useDispatch","editSection","EditableTimer","EditableContent","itemId","tree","items","TreeContainer","styled","div","ItemContainer","props","depth","Icon","onExpand","onCollapse","children","isExpanded","renderItem","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","TimerTree","toggleIsExpanded","prop","Tree","isDragEnabled","isNestingEnabled","onDragEnd","source","destination","onDragEndAction","TimerTreeIcons","onClickAdd","onClickComplete","Heading","align","lineHeight","TimerApp","isTree","setIsTree","isOpenModal","setIsOpenModal","toggleIsTree","toggleIsOpen","slideToTimerList","timerId","useRef","startTimerDispatch","current","setInterval","skipTimerDisparch","clearInterval","resetTimerDispatch","stopTimerDispatch","View","useTransition","from","opacity","xy","enter","leave","transform","to","x","y","position","left","right","width","bottom","parentId","treeItemData","Main","Boolean","window","location","hostname","match","initState","rootId","hasChildren","isChildrenLoading","undefined","flattenTree","nextFocus","findIndex","elem","i","isParent","child","parent","every","n","isSamePath","a","b","isFullyCounted","path","find","getItemFromPath","countUpNearestSection","currPath","parentIdxs","basePath","reduce","accum","val","concat","getAllParentIdxs","reverse","parentItem","timersReducer","produce","draft","action","AT","currTimer","TypeError","lastIdx","nextSiblingPath","splice","nextSiblingItem","isLastTimer","ltRepeatParentPath","parentPath","initItems","v","initTreeItem","getNewItemIds","numIds","startNum","Object","keys","newIds","push","String","getItemFromPosition","treeReducer","newId","newItem","setNewItemOnTree","allChildIds","getAllChildrenIds","parentItemId","originalData","newData","JSON","stringify","src","dst","dstItem","srcItem","newSectionId","newSection","dstParentItem","values","some","dstItemPosition","filter","combineTwoTimersIntoSection","moveItemOnTree","flag","rootReducer","store","createStore","theme","createMuiTheme","palette","primary","main","secondary","responsiveFontSizes","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83a9655b.chunk.js","sourcesContent":["import {\n  ItemId,\n  TreeDestinationPosition,\n  TreeSourcePosition\n} from \"@atlaskit/tree\";\nimport { EditableSectionData, EditableTimerData } from \"./types\";\n\nexport const actionTypes = {\n  // for rootReducer\n  FLATTEN_TREE: \"FLATTEN_TREE\",\n  // for treeReducer\n  ADD_TIMER: \"ADD_TIMER\",\n  REMOVE_ITEM: \"REMOVE_ITEM\",\n  EDIT_TIMER: \"EDIT_TIMER\",\n  EDIT_SECTION: \"EDIT_SECTION\",\n  ON_DRAG_END: \"ON_DRAG_END\",\n  TOGGLE_PROPERTY: \"TOGGLE_PROPERTY\",\n  // for timersReducer\n  ADD_TIME: \"ADD_TIME\",\n  FORWARD_FOCUS: \"FORWARD_FOCUS\"\n} as const;\n\nexport const addTime = () => {\n  return {\n    type: actionTypes.ADD_TIME,\n    payload: {}\n  };\n};\n\nexport const forwardCurrentTimerIndex = () => {\n  return {\n    type: actionTypes.FORWARD_FOCUS\n  };\n};\nexport const addTimer = (parentId: ItemId, treeItemData: EditableTimerData) => {\n  return {\n    type: actionTypes.ADD_TIMER,\n    payload: {\n      parentId,\n      ...treeItemData\n    }\n  };\n};\nexport const removeItem = (source: TreeSourcePosition) => {\n  return {\n    type: actionTypes.REMOVE_ITEM,\n    payload: {\n      source\n    }\n  };\n};\nexport const editTimer = (\n  editItemId: ItemId,\n  data: Partial<EditableTimerData>\n) => {\n  return {\n    type: actionTypes.EDIT_TIMER,\n    payload: {\n      editItemId,\n      data\n    }\n  };\n};\n\nexport const editSection = (\n  editItemId: ItemId,\n  data: Partial<EditableSectionData>\n) => {\n  return {\n    type: actionTypes.EDIT_SECTION,\n    payload: {\n      editItemId,\n      data\n    }\n  };\n};\nexport const onDragEnd = (\n  source: TreeSourcePosition,\n  destination: TreeDestinationPosition\n) => {\n  return {\n    type: actionTypes.ON_DRAG_END,\n    payload: {\n      source,\n      destination\n    }\n  };\n};\n\nexport const toggleProperty = (\n  id: ItemId,\n  prop: \"isExpanded\" | \"isChildrenLoading\" | \"hasChildren\"\n) => {\n  return {\n    type: actionTypes.TOGGLE_PROPERTY,\n    payload: {\n      id,\n      prop\n    }\n  };\n};\n\nexport const parseTreeToTimers = () => {\n  return {\n    type: actionTypes.FLATTEN_TREE\n  };\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  TextField\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { EditableTimerData } from \"../types\";\nconst useStyles = makeStyles({\n  root: {\n    margin: \"10px\"\n  }\n});\nexport const AddTimerDialog = ({\n  open,\n  onClose,\n  onSubmit\n}: {\n  open: boolean;\n  onClose: () => void;\n  onSubmit: (data: EditableTimerData) => void;\n}) => {\n  const classes = useStyles();\n  const [timeLimit, setTimeLimit] = useState(0);\n  const [power, setPower] = useState(0);\n\n  const onClickOK = () => {\n    if (timeLimit > 0 && power > 0) {\n      onSubmit({ power, timeLimit, comment: \"\" });\n    }\n    onClose();\n  };\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Input new Timer</DialogTitle>\n      <DialogContent>\n        <TextField\n          value={timeLimit}\n          onChange={e => setTimeLimit(Number(e.target.value))}\n          variant=\"outlined\"\n          label=\"TimeLimit\"\n          inputProps={{ type: \"number\", min: 1 }}\n          className={classes.root}\n        />\n        <br />\n        <TextField\n          value={power}\n          onChange={e => setPower(Number(e.target.value))}\n          variant=\"outlined\"\n          label=\"Power\"\n          inputProps={{ type: \"number\", min: 1 }}\n          className={classes.root}\n        />\n        <br />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClickOK}>OK!</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { SectionTreeItemData, TimerTreeItemData, TreeItemData } from \"./types\";\n\nexport const isSection = (data: TreeItemData): data is SectionTreeItemData => {\n  if (\"repeat\" in data && \"count\" in data && !(\"timeLimit\" in data))\n    return true;\n  else return false;\n};\n\nexport const isTimer = (data: TreeItemData): data is TimerTreeItemData => {\n  if (\"elapsedTime\" in data && \"power\" in data && !(\"repeat\" in data))\n    return true;\n  else return false;\n};\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { animated, useSprings } from \"react-spring\";\nimport { State } from \"../../types\";\nimport { isSection } from \"../../utils\";\n\nconst AnimatedTyporaphy = animated(Typography);\n\nexport const TimerList = () => {\n  const timers = useSelector((state: State) => state.timers.timerList);\n  const focus = useSelector((state: State) => state.timers.currentTimerIndex);\n\n  const springs = useSprings(\n    timers.length,\n    timers.map((_, index) => {\n      return {\n        fontSize: index === focus ? \"2rem\" : \"1rem\"\n      };\n    })\n  );\n\n  const ListItems = springs.map((spring, idx) => {\n    const item = timers[idx].item;\n    if (isSection(item.data)) {\n      // must be Section\n      const { repeat, count } = item.data;\n      return (\n        <AnimatedTyporaphy style={spring} key={item.id}>\n          {`${count}/ ${repeat}`}\n        </AnimatedTyporaphy>\n      );\n    } else {\n      const { timeLimit, power, elapsedTime } = item.data;\n      return (\n        <AnimatedTyporaphy style={spring} key={item.id}>\n          {`${elapsedTime} /  ${timeLimit} sec @ ${power} W`}\n        </AnimatedTyporaphy>\n      );\n    }\n  });\n  return <div style={{ textAlign: \"center\" }}>{ListItems}</div>;\n};\n","import { IconButton, makeStyles } from \"@material-ui/core\";\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport React, { useState } from \"react\";\n\nconst useIconStyles = makeStyles({\n  root: {\n    fontSize: \"5rem\"\n  }\n});\n\nexport const TimerListIcons = ({\n  onClickStart,\n  onClickSkip,\n  onClickStop,\n  onClickReset\n}: {\n  onClickStart: () => void;\n  onClickSkip: () => void;\n  onClickStop: () => void;\n  onClickReset: () => void;\n}) => {\n  const classes = useIconStyles();\n  const [isElapsing, setIsElapsing] = useState(false);\n  return (\n    <div className={classes.root}>\n      {isElapsing ? (\n        <IconButton\n          onClick={() => {\n            onClickStop();\n            setIsElapsing(!isElapsing);\n          }}\n        >\n          <StopIcon className={classes.root} color=\"primary\" />\n        </IconButton>\n      ) : (\n        <IconButton\n          onClick={() => {\n            onClickStart();\n            setIsElapsing(!isElapsing);\n          }}\n        >\n          <PlayCircleFilledWhiteIcon className={classes.root} color=\"primary\" />\n        </IconButton>\n      )}\n\n      <IconButton onClick={onClickSkip}>\n        <SkipNextIcon className={classes.root} color=\"primary\" />\n      </IconButton>\n      <IconButton onClick={onClickReset}>\n        <RotateLeftIcon className={classes.root} color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n};\n","import { ItemId } from \"@atlaskit/tree\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editSection, editTimer } from \"../../actions\";\nimport { SectionTreeItemData, State, TimerTreeItemData } from \"../../types\";\nimport { isSection, isTimer } from \"../../utils\";\n\nconst EditableInput = ({\n  value,\n  onChange,\n  inputProps\n}: {\n  value: string | number;\n  onChange: any;\n  inputProps?: any;\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const onKeyDown = e => {\n    if (e.keyCode === 13) {\n      setIsEditing(!isEditing);\n    }\n  };\n  const onBlur = () => {\n    setIsEditing(false);\n  };\n  const onClick = () => setIsEditing(!isEditing);\n  return (\n    <span>\n      {isEditing ? (\n        <TextField\n          value={value}\n          inputProps={inputProps}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          onBlur={onBlur}\n        />\n      ) : (\n        <span onClick={onClick}>&nbsp; {value} &nbsp;</span>\n      )}\n    </span>\n  );\n};\n\nconst EditableSection = ({\n  id,\n  data\n}: {\n  id: ItemId;\n  data: SectionTreeItemData;\n}) => {\n  const { repeat } = data;\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(editSection(id, { repeat: Number(e.target.value) }));\n  };\n  return (\n    <span>\n      <EditableInput\n        value={repeat}\n        onChange={onChange}\n        inputProps={{ type: \"number\", min: 1 }}\n      />\n      {\" Times\"}\n    </span>\n  );\n};\n\nconst EditableTimer = ({\n  id,\n  data\n}: {\n  id: ItemId;\n  data: TimerTreeItemData;\n}) => {\n  const dispatch = useDispatch();\n\n  const { power, timeLimit } = data;\n\n  const onChangeTimeLimit = e => {\n    dispatch(editTimer(id, { timeLimit: Number(e.target.value) }));\n  };\n  const onChangePower = e => {\n    dispatch(editTimer(id, { power: Number(e.target.value) }));\n  };\n  return (\n    <span>\n      <EditableInput\n        value={timeLimit}\n        onChange={onChangeTimeLimit}\n        inputProps={{ type: \"number\", min: 1 }}\n      />\n      {\"Sec @\"}\n      <EditableInput\n        value={power}\n        onChange={onChangePower}\n        inputProps={{ type: \"number\", min: 1 }}\n      />\n      {\" W\"}\n    </span>\n  );\n};\n\nconst EditableContent = ({ itemId }: { itemId: ItemId }) => {\n  const item = useSelector((state: State) => state.tree.items[itemId]);\n  const { data } = item;\n  if (isSection(data)) {\n    return <EditableSection id={item.id} data={data} />;\n  } else if (isTimer(data)) {\n    return <EditableTimer id={item.id} data={data} />;\n  }\n};\n\nexport default EditableContent;\n","import Tree, {\n  ItemId,\n  RenderItemParams,\n  TreeDestinationPosition,\n  TreeSourcePosition\n} from \"@atlaskit/tree\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { onDragEnd as onDragEndAction, toggleProperty } from \"../../actions\";\nimport { State } from \"../../types\";\nimport EditableContent from \"./EditableContent\";\nconst TreeContainer = styled.div`\n  max-width: 300px;\n  margin: auto;\n`;\nconst ItemContainer = styled.div<any>`\n  border-radius: 2px;\n  margin: 1px 0;\n  background-color: hsl(${props => 40 - props.depth * 15}, 50%, 50%);\n`;\nconst Icon = ({ item, onExpand, onCollapse, depth }) => {\n  if (item.children && item.children.length > 0) {\n    return item.isExpanded ? (\n      <ArrowDropDownIcon onClick={() => onCollapse(item.id)} color=\"primary\" />\n    ) : (\n      <ArrowRightIcon onClick={() => onExpand(item.id)} color=\"primary\" />\n    );\n  } else {\n    return <span> &bull; </span>;\n  }\n};\n\nconst renderItem = ({\n  item,\n  depth,\n  onExpand,\n  onCollapse,\n  provided,\n  snapshot\n}: RenderItemParams) => {\n  return (\n    <ItemContainer\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n      depth={depth}\n    >\n      <Icon\n        item={item}\n        onExpand={onExpand}\n        onCollapse={onCollapse}\n        depth={depth}\n      />\n      <EditableContent itemId={item.id} />\n    </ItemContainer>\n  );\n};\n\nconst TimerTree = () => {\n  const dispatch = useDispatch();\n  const tree = useSelector((state: State) => state.tree);\n\n  const toggleIsExpanded = (itemId: ItemId) => {\n    dispatch(toggleProperty(itemId, \"isExpanded\"));\n  };\n  const onDragEnd = (\n    source: TreeSourcePosition,\n    destination: TreeDestinationPosition\n  ) => {\n    // if (!destination) dispatch(removeItem(source));\n    dispatch(onDragEndAction(source, destination));\n  };\n\n  return (\n    <TreeContainer>\n      <Tree\n        tree={tree}\n        renderItem={renderItem}\n        isDragEnabled\n        isNestingEnabled\n        onCollapse={toggleIsExpanded}\n        onExpand={toggleIsExpanded}\n        onDragEnd={onDragEnd}\n      />\n    </TreeContainer>\n  );\n};\n\nexport default TimerTree;\n","import { IconButton, makeStyles } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport React from \"react\";\n\nconst useIconStyles = makeStyles({\n  root: {\n    fontSize: \"5rem\"\n  }\n});\n\nexport const TimerTreeIcons = ({\n  onClickAdd,\n  onClickComplete\n}: {\n  onClickAdd: () => void;\n  onClickComplete: () => void;\n}) => {\n  const classes = useIconStyles();\n  return (\n    <div>\n      <IconButton onClick={onClickAdd}>\n        <AddCircleIcon className={classes.root} color=\"primary\" />\n      </IconButton>\n      <IconButton onClick={onClickComplete}>\n        <CheckCircleIcon className={classes.root} color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n};\n","import { styled, Typography } from \"@material-ui/core\";\nimport React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { animated, useTransition } from \"react-spring\";\nimport {\n  addTimer as addTimerAct,\n  parseTreeToTimers,\n  forwardCurrentTimerIndex,\n  addTime\n} from \"../actions\";\nimport { AddTimerDialog } from \"./AddTimerDialog\";\nimport { TimerList } from \"./Timer/TimerList\";\nimport { TimerListIcons } from \"./Timer/TimerListButtons\";\nimport TimerTree from \"./Tree/TimerTree\";\nimport { TimerTreeIcons } from \"./Tree/TimerTreeButtons\";\nimport { State } from \"../types\";\n\nconst Heading = styled(({ children }) => (\n  <Typography variant=\"h1\" align=\"center\">\n    {children}\n  </Typography>\n))({\n  lineHeight: \"initial\"\n});\n\nconst TimerApp = () => {\n  const [isTree, setIsTree] = useState(true);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const toggleIsTree = () => setIsTree(!isTree);\n  const toggleIsOpen = () => setIsOpenModal(!isOpenModal);\n\n  const dispatch = useDispatch();\n  // TimerTreeButton callback\n  const addTimer = ({\n    timeLimit,\n    power\n  }: {\n    timeLimit: number;\n    power: number;\n  }) => {\n    dispatch(addTimerAct(\"root\", { power, timeLimit, comment: \"\" }));\n  };\n\n  const slideToTimerList = () => {\n    dispatch(parseTreeToTimers());\n    toggleIsTree();\n  };\n\n  // TimerList callback\n  let timerId = useRef<number>();\n  const startTimerDispatch = () => {\n    timerId.current = setInterval(() => dispatch(addTime()), 1000);\n  };\n\n  const skipTimerDisparch = () => {\n    clearInterval(timerId.current);\n    dispatch(forwardCurrentTimerIndex());\n    timerId.current = setInterval(() => dispatch(addTime()), 1000);\n  };\n\n  const resetTimerDispatch = () => {\n    clearInterval(timerId.current);\n    toggleIsTree();\n  };\n\n  const stopTimerDispatch = () => {\n    clearInterval(timerId.current);\n  };\n\n  const focus = useSelector((state: State) => state.timers.currentTimerIndex);\n  if (focus === -1) clearInterval(timerId.current);\n\n  const transitions = useTransition(isTree, null, {\n    from: {\n      opacity: 0,\n      xy: isTree ? [-100, 0] : [100, 0]\n    },\n    enter: { opacity: 1, xy: [0, 0] },\n    leave: {\n      opacity: 0,\n      xy: isTree ? [50, 0] : [-50, 0]\n    }\n  });\n\n  const View = transitions.map(({ item, key, props }) => {\n    return (\n      <div key={key}>\n        <animated.div\n          style={{\n            ...props,\n            transform: props.xy.to((x, y) =>\n              x === 0 && y === 0 ? \"none\" : `translate(${x}%, ${y}%)`\n            ),\n            position: \"absolute\",\n            left: 0,\n            right: 0\n          }}\n        >\n          {item ? <TimerTree /> : <TimerList />}\n        </animated.div>\n\n        <animated.div\n          style={{\n            opacity: props.opacity,\n            position: \"fixed\",\n            width: \"100%\",\n            textAlign: \"center\",\n            bottom: \"10px\"\n          }}\n        >\n          {item ? (\n            <TimerTreeIcons\n              onClickAdd={toggleIsOpen}\n              onClickComplete={slideToTimerList}\n            />\n          ) : (\n            <TimerListIcons\n              onClickStart={startTimerDispatch}\n              onClickSkip={skipTimerDisparch}\n              onClickStop={stopTimerDispatch}\n              onClickReset={resetTimerDispatch}\n            />\n          )}\n        </animated.div>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <Heading>Training Timer</Heading>\n      {View}\n      <AddTimerDialog\n        open={isOpenModal}\n        onClose={toggleIsOpen}\n        onSubmit={addTimer}\n      />\n    </div>\n  );\n};\n\nexport const Main = () => <TimerApp />;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { flattenTree } from \"@atlaskit/tree/dist/cjs/utils/tree\";\nimport { MutableState } from \"./types\";\n\nexport const initState: MutableState = {\n  tree: {\n    rootId: \"root\",\n    items: {\n      root: {\n        id: \"root\",\n        children: [\"0\", \"1\", \"2\", \"3\"],\n        hasChildren: true,\n        isExpanded: true,\n        isChildrenLoading: false\n      },\n      \"0\": {\n        id: \"0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 3,\n          power: 130,\n          comment: \"\"\n        }\n      },\n      \"1\": {\n        id: \"1\",\n        children: [\"1-0\", \"1-1\"],\n        hasChildren: true,\n        isExpanded: true,\n        isChildrenLoading: false,\n        data: {\n          repeat: 1,\n          count: 0,\n          comment: \"\"\n        }\n      },\n      \"1-0\": {\n        id: \"1-0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 2,\n          power: 260,\n          comment: \"\"\n        }\n      },\n      \"1-1\": {\n        id: \"1-1\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 2,\n          power: 260,\n          comment: \"\"\n        }\n      },\n      \"2\": {\n        id: \"2\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 5,\n          power: 260,\n          comment: \"\"\n        }\n      },\n      \"3\": {\n        id: \"3\",\n        children: [\"3-0\", \"3-1\", \"3-2\"],\n        hasChildren: false,\n        isExpanded: true,\n        isChildrenLoading: false,\n        data: {\n          repeat: 1,\n          count: 0,\n          comment: \"\"\n        }\n      },\n      \"3-0\": {\n        id: \"3-0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 2,\n          power: 150,\n          comment: \"\"\n        }\n      },\n      \"3-1\": {\n        id: \"3-1\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 2,\n          power: 150,\n          comment: \"\"\n        }\n      },\n      \"3-2\": {\n        id: \"3-2\",\n        children: [\"3-2-0\", \"3-2-1\"],\n        hasChildren: true,\n        isExpanded: true,\n        isChildrenLoading: false,\n        data: {\n          repeat: 1,\n          comment: \"\",\n          count: 0\n        }\n      },\n      \"3-2-0\": {\n        id: \"3-2-0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 3,\n          power: 150,\n          comment: \"\"\n        }\n      },\n      \"3-2-1\": {\n        id: \"3-2-1\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 3,\n          power: 150,\n          comment: \"\"\n        }\n      }\n    }\n  },\n  timers: undefined\n};\n\ninitState.timers = {\n  currentTimerIndex: 0,\n  timerList: flattenTree(initState.tree)\n};\n","import produce, { Draft } from \"immer\";\nimport { actionTypes as AT } from \"../actions\";\nimport { initState } from \"../initState\";\nimport { Action, TimersListData, TimerList } from \"../types\";\nimport { isTimer, isSection } from \"../utils\";\nimport { Path } from \"@atlaskit/tree\";\n\nexport const nextFocus = (timerList: TimerList, focus: number) => {\n  return timerList.findIndex((elem, i) => {\n    if (i > focus && isTimer(elem.item.data)) {\n      return true;\n    }\n    return false;\n  });\n};\nexport const isParent = (child: Path, parent: Path) => {\n  if (child.length > parent.length) {\n    return parent.every((n, i) => n === child[i]);\n  } else {\n    return false;\n  }\n};\nexport const isSamePath = (a: Path, b: Path) => {\n  if (a.length === b.length) {\n    return a.every((_, i) => a[i] === b[i]);\n  } else {\n    return false;\n  }\n};\nexport const getAllParentIdxs = (\n  timerList: TimerList,\n  basePath: Path\n): number[] => {\n  return timerList.reduce((accum, val, idx) => {\n    if (isParent(basePath, val.path)) return accum.concat(idx);\n    return accum;\n  }, []);\n};\n\nexport const isLastTimer = (timerList: TimerList, path: Path) => {\n  const lastIdx = path.length - 1;\n  const nextSiblingPath = [...path];\n  nextSiblingPath.splice(lastIdx, 1, path[lastIdx] + 1);\n  const nextSiblingItem = timerList.find(item =>\n    isSamePath(item.path, nextSiblingPath)\n  );\n  if (typeof nextSiblingItem === \"undefined\") return true;\n  return !isTimer(nextSiblingItem.item.data);\n};\nexport const getItemFromPath = (timerList: TimerList, path: Path) => {\n  return timerList.find(item => isSamePath(item.path, path));\n};\n\nexport const isFullyCounted = (timerList: TimerList, path: Path) => {\n  const item = getItemFromPath(timerList, path).item;\n  if (isSection(item.data)) {\n    return item.data.repeat === item.data.count;\n  } else {\n    return item.data.elapsedTime === item.data.timeLimit;\n  }\n};\n\nexport const countUpNearestSection = (timerList: TimerList, currPath: Path) => {\n  const parentIdxs = getAllParentIdxs(timerList, currPath).reverse();\n  for (let idx of parentIdxs) {\n    let parentItem = timerList[idx];\n    if (\n      !isFullyCounted(timerList, parentItem.path) &&\n      isSection(parentItem.item.data)\n    ) {\n      parentItem.item.data.count++;\n\n      return parentItem.item.data.count === parentItem.item.data.repeat\n        ? undefined\n        : parentItem.path;\n    }\n  }\n\n  return;\n};\n\nexport const getFirstTimerIdx = (timerList: TimerList, path: Path) => {\n  return timerList.findIndex(\n    v => isParent(v.path, path) && isTimer(v.item.data)\n  );\n};\n\nexport const initItems = (timerList: TimerList, parentPath: Path) => {\n  for (let i in timerList) {\n    const elem = timerList[i];\n    if (!isParent(elem.path, parentPath)) continue;\n\n    if (isTimer(elem.item.data)) {\n      elem.item.data.elapsedTime = 0;\n    } else {\n      elem.item.data.count = 0;\n    }\n  }\n};\nexport const timersReducer = produce(\n  (draft: Draft<TimersListData>, action: Action) => {\n    switch (action.type) {\n      case AT.FORWARD_FOCUS: {\n        draft.currentTimerIndex = nextFocus(\n          draft.timerList,\n          draft.currentTimerIndex\n        );\n        break;\n      }\n      case AT.ADD_TIME: {\n        // if (\"focusがタイマーを指していたら\") {\n        //   if (\"経過時間がタイムリミットより小さいなら\") {\n        //     \"タイマーを1カウントアップ\";\n        //   }\n        //   if (\"タイムリミットに達したら\") {\n        //     if (\"階層の最後のタイマーだったら\") {\n        //       \"一番近い親からカウントアップ\";\n        //       if (\"全ての親が最大カウントになったら\") {\n        //         \"次のタイマーへ\";\n        //       } else {\n        //         \"カウントアップされた親の子アイテムを初期化\";\n        //         \"カウントアップされた親の、最初の子タイマーへ移動\";\n        //       }\n        //     } else {\n        //       \"次の弟タイマーへ\";\n        //     }\n        //   }\n        // } else {\n        //   \"エラー\";\n        // }\n        const focus = draft.currentTimerIndex;\n        const { item: currTimer, path: currPath } = draft.timerList[focus];\n        if (isTimer(currTimer.data)) {\n          if (!isFullyCounted(draft.timerList, currPath)) {\n            currTimer.data.elapsedTime++;\n          }\n\n          if (isFullyCounted(draft.timerList, currPath)) {\n            if (isLastTimer(draft.timerList, currPath)) {\n              const ltRepeatParentPath = countUpNearestSection(\n                draft.timerList,\n                currPath\n              );\n              // 全ての親のカウントが最大になったら\n              if (typeof ltRepeatParentPath === \"undefined\") {\n                draft.currentTimerIndex = nextFocus(draft.timerList, focus);\n              } else {\n                initItems(draft.timerList, ltRepeatParentPath);\n                draft.currentTimerIndex = getFirstTimerIdx(\n                  draft.timerList,\n                  ltRepeatParentPath\n                );\n              }\n            } else {\n              draft.currentTimerIndex = nextFocus(draft.timerList, focus);\n            }\n          }\n        } else {\n          throw new TypeError(\n            `currentTimerIndex:${draft.currentTimerIndex}  indecates Section`\n          );\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  },\n  initState.timers\n);\n","import {\n  ItemId,\n  moveItemOnTree,\n  TreeDestinationPosition,\n  TreeSourcePosition\n} from \"@atlaskit/tree\";\nimport produce, { Draft } from \"immer\";\nimport { actionTypes as AT } from \"../actions\";\nimport {\n  Action,\n  EditableTimerData,\n  SectionTreeItemData,\n  TreeData,\n  TreeItem\n} from \"../types\";\nimport { isSection, isTimer } from \"../utils\";\n\nconst initTreeItem: TreeItem = {\n  id: undefined,\n  children: [],\n  hasChildren: false,\n  isExpanded: false,\n  isChildrenLoading: false\n};\n\nexport const getNewItemIds = (tree: TreeData, numIds: number) => {\n  const startNum = Object.keys(tree.items).length - 1;\n  const newIds: ItemId[] = [];\n  for (let i = startNum; i < numIds + startNum; i++) {\n    newIds.push(String(i));\n  }\n  return newIds;\n};\n\nexport const setNewItemOnTree = (\n  tree: TreeData,\n  parentId: ItemId,\n  data: EditableTimerData\n) => {\n  const newId = getNewItemIds(tree, 1)[0];\n  const newItem = produce(initTreeItem, draft => {\n    draft.id = newId;\n    draft.data = {\n      elapsedTime: 0,\n      comment: \"\",\n      ...data\n    };\n  });\n  tree.items[parentId].children.push(newId);\n  tree.items[newId] = newItem;\n};\nexport const getAllChildrenIds = (\n  tree: TreeData,\n  parentItemId: ItemId\n): ItemId[] => {\n  return tree.items[parentItemId].children.reduce(\n    (accum, id) => {\n      if (tree.items[id].children.length > 0) {\n        return accum.concat(getAllChildrenIds(tree, id));\n      } else {\n        return [...accum, id];\n      }\n    },\n    [parentItemId]\n  );\n};\n\nexport const getItemFromPosition = (\n  tree: TreeData,\n  position: TreeDestinationPosition\n) => {\n  if (typeof position.index === \"undefined\") {\n    return tree.items[position.parentId];\n  } else {\n    const id = tree.items[position.parentId].children[position.index];\n    return tree.items[id];\n  }\n};\nexport const combineTwoTimersIntoSection = (\n  tree: TreeData,\n  src: TreeSourcePosition,\n  dst: TreeDestinationPosition\n) => {\n  // construct new section\n  const dstItem = getItemFromPosition(tree, dst);\n  const srcItem = getItemFromPosition(tree, src);\n  const newSectionId = getNewItemIds(tree, 1)[0];\n  const newSectionData: SectionTreeItemData = {\n    repeat: 1,\n    count: 0,\n    comment: \"\"\n  };\n  const newSection = {\n    ...initTreeItem,\n    id: newSectionId,\n    data: newSectionData,\n    children: [dstItem.id, srcItem.id]\n  };\n\n  const dstParentItem = Object.values(tree.items).find(item =>\n    item.children.some(id => id === dstItem.id)\n  );\n  const dstItemPosition = {\n    parentId: dstParentItem.id,\n    index: dstParentItem.children.findIndex(id => id === dstItem.id)\n  };\n\n  // remove src deps\n  tree.items[src.parentId].children = tree.items[src.parentId].children.filter(\n    id => id !== srcItem.id\n  );\n  // replace dstItem.id to newSection\n  tree.items[dstItemPosition.parentId].children = tree.items[\n    dstItemPosition.parentId\n  ].children.map(id => (id === dstItem.id ? newSectionId : id));\n\n  // add newSection\n  tree.items[newSectionId] = newSection;\n};\nexport const treeReducer = produce((tree: Draft<TreeData>, action: Action) => {\n  switch (action.type) {\n    case AT.ADD_TIMER: {\n      const { parentId, ...data } = action.payload;\n      setNewItemOnTree(tree, parentId, { ...data });\n      break;\n    }\n    case AT.REMOVE_ITEM: {\n      const { parentId, index } = action.payload.source;\n\n      const allChildIds = getAllChildrenIds(\n        tree,\n        tree.items[parentId].children[index]\n      );\n      tree.items[parentId].children.splice(index, 1);\n\n      for (const id of allChildIds) {\n        delete tree.items[id];\n      }\n      break;\n    }\n    case AT.EDIT_TIMER: {\n      const { editItemId, data } = action.payload;\n      const originalData = tree.items[editItemId].data;\n      const newData = { ...originalData, ...data };\n      if (isTimer(newData)) {\n        tree.items[editItemId].data = newData;\n      } else {\n        throw new TypeError(\n          `data:${JSON.stringify(newData)} must be TimerTreeItemData`\n        );\n      }\n      break;\n    }\n    case AT.EDIT_SECTION: {\n      const { editItemId, data } = action.payload;\n      const originalData = tree.items[editItemId].data;\n      const newData = { ...originalData, ...data };\n      if (isSection(newData)) {\n        tree.items[editItemId].data = newData;\n      } else {\n        throw new TypeError(\n          `data:${JSON.stringify(data)} must be SectionTreeItemData`\n        );\n      }\n      break;\n    }\n    case AT.ON_DRAG_END: {\n      const src = action.payload.source;\n      const dst = action.payload.destination;\n\n      const dstItem = getItemFromPosition(tree, dst);\n\n      if (!dst) break;\n\n      if (typeof dst.index === \"undefined\" && isTimer(dstItem.data)) {\n        combineTwoTimersIntoSection(tree, src, dst);\n        break;\n      } else {\n        return moveItemOnTree(tree, src, dst);\n      }\n    }\n    case AT.TOGGLE_PROPERTY: {\n      const { id, prop } = action.payload;\n\n      const flag = tree.items[id][prop];\n      tree.items[id][prop] = !flag;\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n});\n","import { flattenTree } from \"@atlaskit/tree/dist/cjs/utils/tree\";\nimport produce, { Draft } from \"immer\";\nimport { actionTypes as AT } from \"../actions\";\nimport { initState } from \"../initState\";\nimport { Action, State } from \"../types\";\nimport { timersReducer } from \"./timersReducer\";\nimport { treeReducer } from \"./treeReducer\";\nimport { isTimer } from \"../utils\";\n\n// Child reducer should return draft state passed from parent reducer.\n// It doen't make a difference between `return draft` and `break`.Former is preferred.\nexport const rootReducer = produce((draft: Draft<State>, action: Action) => {\n  switch (action.type) {\n    case AT.FLATTEN_TREE: {\n      draft.timers.timerList = flattenTree(draft.tree);\n      draft.timers.currentTimerIndex = draft.timers.timerList.findIndex(elem =>\n        isTimer(elem.item.data)\n      );\n      break;\n    }\n    default: {\n      draft.timers = timersReducer(draft.timers, action);\n      draft.tree = treeReducer(draft.tree, action);\n      break;\n    }\n  }\n}, initState);\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"./reducers/rootReducer\";\n\nexport const store = createStore(rootReducer);\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Main } from \"./components/main\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./store\";\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#f55333\"\n    },\n    secondary: {\n      main: \"#062457\"\n    }\n  }\n});\n\ntheme = responsiveFontSizes(theme);\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Main />\n      </ThemeProvider>\n    </Provider>\n  );\n};\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}