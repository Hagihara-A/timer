{"version":3,"sources":["actions.ts","components/AddTimerDialog.tsx","components/Buttons/TreeButtons.tsx","components/Buttons/ElapsingButtons.tsx","utils.ts","components/Tree/EditableContent.tsx","components/Tree/TimerTree.tsx","components/main.tsx","serviceWorker.js","initState.ts","reducers/treeReducer.ts","reducers/optionsReducer.ts","reducers/rootReducer.ts","store.js","index.tsx"],"names":["actionTypes","editTimer","editItemId","data","type","payload","useStyles","makeStyles","root","margin","AddTimerDialog","open","onClose","onSubmit","classes","useState","timeLimit","setTimeLimit","power","setPower","Dialog","DialogTitle","DialogContent","TextField","value","onChange","e","Number","target","variant","label","inputProps","min","className","DialogActions","Button","onClick","comment","floatUp","keyframes","ButtonsContainer","styled","div","TreeButtons","onClickAdd","onClickComplete","IconButton","color","style","fontSize","ElapsingButtons","onClickStart","onClickStop","onClickReset","isElapsing","setIsElapsing","isSection","isTimer","numInputProps","NarrowTextField","EditableSection","id","repeat","count","dispatch","useDispatch","isDraggable","useSelector","state","options","isDragEnabled","editSection","EditableTimer","elapsedTime","EditableContent","itemId","item","tree","items","TreeContainer","ItemContainer","props","powerPerFTP","rgb","DeleteIcon","DeleteIconInner","Icon","onExpand","onCollapse","children","length","isExpanded","TimerTree","toggleIsExpanded","prop","remove","removeItem","Tree","renderItem","provided","ref","innerRef","draggableProps","dragHandleProps","size","isNestingEnabled","onDragEnd","source","destination","onDragEndAction","TimerApp","isModalOpen","setIsModalOpen","toggleIsModalOpen","toggleIsDragEnabled","timerId","useRef","Typography","paragraph","align","current","setInterval","clearInterval","parentId","treeItemData","Main","Boolean","window","location","hostname","match","initState","rootId","hasChildren","isChildrenLoading","initTreeItem","undefined","getNewItemIds","numIds","startNum","Object","keys","newIds","i","push","String","getItemFromPosition","position","index","isFullyCounted","countUp","timerTree","toBeCountedId","traverse","resetDescendant","parent","child","nextId","childIds","currItem","isBelowRepeat","removeItemRecursive","ids","treeReducer","produce","action","AT","newId","newItem","draft","setNewItemOnTree","values","find","v","includes","itemIdx","findIndex","splice","originalData","newData","TypeError","JSON","stringify","src","dst","dstItem","srcItem","newSectionId","newSection","dstParentItem","some","dstItemPosition","filter","map","combineTwoTimersIntoSection","moveItemOnTree","flag","parentItem","it","cleanseTree","optionsReducer","reducer","combineReducers","store","createStore","theme","createMuiTheme","palette","primary","main","secondary","responsiveFontSizes","App","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0ec54b0.chunk.js","sourcesContent":["import {\n  ItemId,\n  TreeDestinationPosition,\n  TreeSourcePosition,\n} from \"@atlaskit/tree\";\nimport { EditableSectionData, EditableTimerData } from \"./types\";\n\nexport const actionTypes = {\n  ADD_TIMER: \"ADD_TIMER\",\n  REMOVE_ITEM: \"REMOVE_ITEM\",\n  EDIT_TIMER: \"EDIT_TIMER\",\n  EDIT_SECTION: \"EDIT_SECTION\",\n  ON_DRAG_END: \"ON_DRAG_END\",\n  TOGGLE_PROPERTY: \"TOGGLE_PROPERTY\",\n  ADD_TIME: \"ADD_TIME\",\n  RESET_TIMER: \"RESET_TIMER\",\n  CLEANSE_TREE: \"CLEANSE_TREE\",\n  TOGGLE_IS_DRAG_ENABLED: \"TOGGLE_IS_DRAG_ENABLED\",\n} as const;\n\nexport const addTime = () => {\n  return {\n    type: actionTypes.ADD_TIME,\n    payload: {},\n  };\n};\n\nexport const addTimer = (parentId: ItemId, treeItemData: EditableTimerData) => {\n  return {\n    type: actionTypes.ADD_TIMER,\n    payload: {\n      parentId,\n      ...treeItemData,\n    },\n  };\n};\nexport const removeItem = (id: ItemId) => {\n  return {\n    type: actionTypes.REMOVE_ITEM,\n    payload: {\n      id,\n    },\n  };\n};\nexport const editTimer = (\n  editItemId: ItemId,\n  data: Partial<EditableTimerData>\n) => {\n  return {\n    type: actionTypes.EDIT_TIMER,\n    payload: {\n      editItemId,\n      data,\n    },\n  };\n};\n\nexport const editSection = (\n  editItemId: ItemId,\n  data: Partial<EditableSectionData>\n) => {\n  return {\n    type: actionTypes.EDIT_SECTION,\n    payload: {\n      editItemId,\n      data,\n    },\n  };\n};\nexport const onDragEnd = (\n  source: TreeSourcePosition,\n  destination: TreeDestinationPosition\n) => {\n  return {\n    type: actionTypes.ON_DRAG_END,\n    payload: {\n      source,\n      destination,\n    },\n  };\n};\n\nexport const toggleProperty = (\n  id: ItemId,\n  prop: \"isExpanded\" | \"isChildrenLoading\" | \"hasChildren\"\n) => {\n  return {\n    type: actionTypes.TOGGLE_PROPERTY,\n    payload: {\n      id,\n      prop,\n    },\n  };\n};\n\nexport const toggleIsDragEnabled = () => {\n  return {\n    type: actionTypes.TOGGLE_IS_DRAG_ENABLED,\n  };\n};\n\nexport const resetTimer = () => {\n  return {\n    type: actionTypes.RESET_TIMER,\n  };\n};\n\nexport const cleanseTree = () => {\n  return {\n    type: actionTypes.CLEANSE_TREE,\n  };\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { EditableTimerData } from \"../types\";\nconst useStyles = makeStyles({\n  root: {\n    margin: \"10px\",\n  },\n});\nexport const AddTimerDialog = ({\n  open,\n  onClose,\n  onSubmit,\n}: {\n  open: boolean;\n  onClose: () => void;\n  onSubmit: (data: EditableTimerData) => void;\n}) => {\n  const classes = useStyles();\n  const [timeLimit, setTimeLimit] = useState(0);\n  const [power, setPower] = useState(0);\n\n  const onClickOK = () => {\n    if (timeLimit > 0 && power > 0) {\n      onSubmit({ power, timeLimit, comment: \"\" });\n    }\n    onClose();\n  };\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Input new Timer</DialogTitle>\n      <DialogContent>\n        <TextField\n          value={timeLimit}\n          onChange={(e) => setTimeLimit(Number(e.target.value))}\n          variant=\"outlined\"\n          label=\"TimeLimit\"\n          inputProps={{ type: \"number\", min: 1 }}\n          className={classes.root}\n        />\n        <br />\n        <TextField\n          value={power}\n          onChange={(e) => setPower(Number(e.target.value))}\n          variant=\"outlined\"\n          label=\"Power\"\n          inputProps={{ type: \"number\", min: 1 }}\n          className={classes.root}\n        />\n        <br />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClickOK}>OK!</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { IconButton } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst floatUp = keyframes`\n  from{\n    opacity: 0;\n  }\n  to{\n    opacity: 1;\n  }\n`;\nexport const ButtonsContainer = styled.div`\n  animation: ${floatUp} 1s ease;\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const fontSize = \"5rem\";\n\nexport const TreeButtons = ({\n  onClickAdd,\n  onClickComplete,\n}: {\n  onClickAdd: () => void;\n  onClickComplete: () => void;\n}) => {\n  return (\n    <ButtonsContainer>\n      <div>\n        <IconButton onClick={onClickAdd}>\n          <AddCircleIcon color=\"primary\" style={{ fontSize }} />\n        </IconButton>\n        <IconButton onClick={onClickComplete}>\n          <CheckCircleIcon color=\"primary\" style={{ fontSize }} />\n        </IconButton>\n      </div>\n    </ButtonsContainer>\n  );\n};\n","import { IconButton } from \"@material-ui/core\";\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport React, { useState } from \"react\";\nimport { ButtonsContainer, fontSize } from \"./TreeButtons\";\n\nexport const ElapsingButtons = ({\n  onClickStart,\n  onClickStop,\n  onClickReset,\n}: {\n  onClickStart: () => void;\n  onClickStop: () => void;\n  onClickReset: () => void;\n}) => {\n  const [isElapsing, setIsElapsing] = useState(false);\n  return (\n    <ButtonsContainer>\n      <div>\n        {isElapsing ? (\n          <IconButton\n            onClick={() => {\n              onClickStop();\n              setIsElapsing(!isElapsing);\n            }}\n          >\n            <StopIcon color=\"primary\" style={{ fontSize }} />\n          </IconButton>\n        ) : (\n          <IconButton\n            onClick={() => {\n              onClickStart();\n              setIsElapsing(!isElapsing);\n            }}\n          >\n            <PlayCircleFilledWhiteIcon color=\"primary\" style={{ fontSize }} />\n          </IconButton>\n        )}\n\n        <IconButton onClick={onClickReset}>\n          <RotateLeftIcon color=\"primary\" style={{ fontSize }} />\n        </IconButton>\n      </div>\n    </ButtonsContainer>\n  );\n};\n","import { SectionTreeItemData, TimerTreeItemData, TreeItemData } from \"./types\";\n\nexport const isSection = (data: TreeItemData): data is SectionTreeItemData => {\n  if (\"repeat\" in data && \"count\" in data && !(\"timeLimit\" in data))\n    return true;\n  else return false;\n};\n\nexport const isTimer = (data: TreeItemData): data is TimerTreeItemData => {\n  if (\"elapsedTime\" in data && \"power\" in data && !(\"repeat\" in data))\n    return true;\n  else return false;\n};\n","import { ItemId } from \"@atlaskit/tree\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { editSection, editTimer } from \"../../actions\";\nimport { SectionTreeItemData, State, TimerTreeItemData } from \"../../types\";\nimport { isSection, isTimer } from \"../../utils\";\n\nconst numInputProps = { type: \"number\", min: 1 };\nconst NarrowTextField = styled(TextField)`\n  width: 55px;\n`;\nconst EditableSection = ({\n  id,\n  data,\n}: {\n  id: ItemId;\n  data: SectionTreeItemData;\n}) => {\n  const { repeat, count } = data;\n  const dispatch = useDispatch();\n  const isDraggable = useSelector(\n    (state: State) => state.options.isDragEnabled\n  );\n  const onChange = (e) => {\n    dispatch(editSection(id, { repeat: Number(e.target.value) }));\n  };\n  return (\n    <>\n      {isDraggable ? (\n        <>\n          <NarrowTextField\n            value={repeat}\n            inputProps={numInputProps}\n            onChange={onChange}\n          />\n          {\"Times\"}\n        </>\n      ) : (\n        `${count}  /  ${repeat}`\n      )}\n    </>\n  );\n};\n\nconst EditableTimer = ({\n  id,\n  data,\n}: {\n  id: ItemId;\n  data: TimerTreeItemData;\n}) => {\n  const dispatch = useDispatch();\n  const isDraggable = useSelector(\n    (state: State) => state.options.isDragEnabled\n  );\n\n  const { power, timeLimit, elapsedTime } = data;\n\n  const onChangeTimeLimit = (e) => {\n    dispatch(editTimer(id, { timeLimit: Number(e.target.value) }));\n  };\n  const onChangePower = (e) => {\n    dispatch(editTimer(id, { power: Number(e.target.value) }));\n  };\n  return (\n    <>\n      {isDraggable ? (\n        <>\n          <NarrowTextField\n            value={timeLimit}\n            inputProps={numInputProps}\n            onChange={onChangeTimeLimit}\n          />\n          {\"Sec @\"}\n          <NarrowTextField\n            value={power}\n            inputProps={numInputProps}\n            onChange={onChangePower}\n          />\n          {\" W\"}\n        </>\n      ) : (\n        `${elapsedTime} / ${timeLimit}  Sec @ ${power} W`\n      )}\n    </>\n  );\n};\n\nconst EditableContent = ({ itemId }: { itemId: ItemId }) => {\n  const item = useSelector((state: State) => state.tree.items[itemId]);\n  const { data } = item;\n  if (isSection(data)) {\n    return <EditableSection id={item.id} data={data} />;\n  } else if (isTimer(data)) {\n    return <EditableTimer id={item.id} data={data} />;\n  }\n};\n\nexport default EditableContent;\n","import Tree, {\n  ItemId,\n  RenderItemParams,\n  TreeDestinationPosition,\n  TreeSourcePosition,\n} from \"@atlaskit/tree\";\nimport DeleteIconInner from \"@material-ui/icons/Delete\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  onDragEnd as onDragEndAction,\n  toggleProperty,\n  removeItem,\n} from \"../../actions\";\nimport { State } from \"../../types\";\nimport EditableContent from \"./EditableContent\";\nimport { IconButton } from \"@material-ui/core\";\n\nconst rgb = ({ powerPerFTP }: { powerPerFTP: number | undefined }) => {\n  if (powerPerFTP < 0.75) return \"#338cff\";\n  else if (powerPerFTP < 0.9) return \"#59bf59\";\n  else if (powerPerFTP < 1.05) return \"#ffcc3f\";\n  else if (powerPerFTP < 1.2) return \"#ff6639\";\n  else if (powerPerFTP < 1.5) return \"#ff330c\";\n  return \"#7d7c78\";\n};\nconst TreeContainer = styled.div`\n  max-width: 20%;\n  margin: auto;\n`;\n\nconst ItemContainer = styled.div<{ powerPerFTP: number }>`\n  border-radius: 2px;\n  margin: 1px 0;\n  background-color: ${(props) => rgb(props)};\n  display: flex;\n  justify-content: space-between;\n`;\nconst DeleteIcon = styled(DeleteIconInner)`\n  opacity: 0;\n  :hover {\n    opacity: 1;\n  }\n  transition: opacity 0.1s 0s ease;\n`;\n\nconst IconInner = ({ item, onExpand, onCollapse }) => {\n  if (item?.children?.length > 0) {\n    return item.isExpanded ? (\n      <KeyboardArrowDownIcon\n        onClick={() => onCollapse(item.id)}\n        color=\"secondary\"\n      />\n    ) : (\n      <KeyboardArrowRightIcon\n        onClick={() => onExpand(item.id)}\n        color=\"secondary\"\n      />\n    );\n  } else {\n    return <span> &bull; </span>;\n  }\n};\n\nconst Icon = styled(IconInner)`\n  vertical-align: text-bottom;\n`;\nconst TimerTree = () => {\n  const dispatch = useDispatch();\n  const tree = useSelector((state: State) => state.tree);\n  const isDragEnabled = useSelector(\n    (state: State) => state.options.isDragEnabled\n  );\n\n  const toggleIsExpanded = (itemId: ItemId) => {\n    dispatch(toggleProperty(itemId, \"isExpanded\"));\n  };\n  const onDragEnd = (\n    source: TreeSourcePosition,\n    destination: TreeDestinationPosition\n  ) => {\n    dispatch(onDragEndAction(source, destination));\n  };\n  const remove = (id: ItemId) => {\n    dispatch(removeItem(id));\n  };\n\n  const renderItem = ({\n    item,\n    onExpand,\n    onCollapse,\n    provided,\n  }: RenderItemParams) => {\n    return (\n      <ItemContainer\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        powerPerFTP={item.data.power / 250}\n      >\n        <div>\n          <Icon item={item} onExpand={onExpand} onCollapse={onCollapse} />\n          <EditableContent itemId={item.id} />\n        </div>\n        <IconButton onClick={() => remove(item.id)} size=\"small\">\n          <DeleteIcon />\n        </IconButton>\n      </ItemContainer>\n    );\n  };\n  return (\n    <TreeContainer>\n      <Tree\n        tree={tree}\n        renderItem={renderItem}\n        isDragEnabled={isDragEnabled}\n        isNestingEnabled\n        onCollapse={toggleIsExpanded}\n        onExpand={toggleIsExpanded}\n        onDragEnd={onDragEnd}\n      />\n    </TreeContainer>\n  );\n};\n\nexport default TimerTree;\n","import { Typography } from \"@material-ui/core\";\nimport React, { useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addTime,\n  addTimer as addTimerAct,\n  toggleIsDragEnabled as toggleDragAct,\n  cleanseTree,\n} from \"../actions\";\nimport { AddTimerDialog } from \"./AddTimerDialog\";\nimport { ElapsingButtons } from \"./Buttons/ElapsingButtons\";\nimport TimerTree from \"./Tree/TimerTree\";\nimport { TreeButtons } from \"./Buttons/TreeButtons\";\nimport { State } from \"../types\";\n\nconst TimerApp = () => {\n  const isDragEnabled = useSelector(\n    (state: State) => state.options.isDragEnabled\n  );\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleIsModalOpen = () => setIsModalOpen(!isModalOpen);\n  const dispatch = useDispatch();\n\n  // TimerTreeButton callback\n  const addTimer = ({\n    timeLimit,\n    power,\n  }: {\n    timeLimit: number;\n    power: number;\n  }) => {\n    dispatch(addTimerAct(\"root\", { power, timeLimit, comment: \"\" }));\n  };\n\n  const toggleIsDragEnabled = () => {\n    dispatch(cleanseTree());\n    dispatch(toggleDragAct());\n  };\n\n  // TimerList callback\n  const timerId = useRef<number>();\n  const startTimerDispatch = () => {\n    timerId.current = setInterval(() => dispatch(addTime()), 1000);\n  };\n\n  const resetTimerDispatch = () => {\n    clearInterval(timerId.current);\n    toggleIsDragEnabled();\n  };\n\n  const stopTimerDispatch = () => {\n    clearInterval(timerId.current);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h1\" paragraph align=\"center\">\n        Training Timer\n      </Typography>\n      <TimerTree />\n      {isDragEnabled ? (\n        <TreeButtons\n          onClickAdd={toggleIsModalOpen}\n          onClickComplete={toggleIsDragEnabled}\n        />\n      ) : (\n        <ElapsingButtons\n          onClickStart={startTimerDispatch}\n          onClickStop={stopTimerDispatch}\n          onClickReset={resetTimerDispatch}\n        />\n      )}\n      <AddTimerDialog\n        open={isModalOpen}\n        onClose={toggleIsModalOpen}\n        onSubmit={addTimer}\n      />\n    </div>\n  );\n};\n\nexport const Main = () => <TimerApp />;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { State } from \"./types\";\n\nexport const initState: State = {\n  options: {\n    isDragEnabled: true,\n  },\n  tree: {\n    rootId: \"root\",\n    items: {\n      root: {\n        id: \"root\",\n        children: [\"0\", \"1\", \"2\", \"3\"],\n        hasChildren: true,\n        isExpanded: true,\n        isChildrenLoading: false,\n      },\n      \"0\": {\n        id: \"0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 3,\n          power: 130,\n          comment: \"\",\n        },\n      },\n      \"1\": {\n        id: \"1\",\n        children: [\"1-0\", \"1-1\"],\n        hasChildren: true,\n        isExpanded: true,\n        isChildrenLoading: false,\n        data: {\n          repeat: 1,\n          count: 0,\n          comment: \"\",\n        },\n      },\n      \"1-0\": {\n        id: \"1-0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 2,\n          power: 260,\n          comment: \"\",\n        },\n      },\n      \"1-1\": {\n        id: \"1-1\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 2,\n          power: 260,\n          comment: \"\",\n        },\n      },\n      \"2\": {\n        id: \"2\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 5,\n          power: 260,\n          comment: \"\",\n        },\n      },\n      \"3\": {\n        id: \"3\",\n        children: [\"3-0\", \"3-1\", \"3-2\"],\n        hasChildren: false,\n        isExpanded: true,\n        isChildrenLoading: false,\n        data: {\n          repeat: 2,\n          count: 0,\n          comment: \"\",\n        },\n      },\n      \"3-0\": {\n        id: \"3-0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 2,\n          power: 150,\n          comment: \"\",\n        },\n      },\n      \"3-1\": {\n        id: \"3-1\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 2,\n          power: 150,\n          comment: \"\",\n        },\n      },\n      \"3-2\": {\n        id: \"3-2\",\n        children: [\"3-2-0\", \"3-2-1\"],\n        hasChildren: true,\n        isExpanded: true,\n        isChildrenLoading: false,\n        data: {\n          repeat: 2,\n          comment: \"\",\n          count: 0,\n        },\n      },\n      \"3-2-0\": {\n        id: \"3-2-0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 3,\n          power: 150,\n          comment: \"\",\n        },\n      },\n      \"3-2-1\": {\n        id: \"3-2-1\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          elapsedTime: 0,\n          timeLimit: 3,\n          power: 150,\n          comment: \"\",\n        },\n      },\n    },\n  },\n};\n","import {\n  ItemId,\n  moveItemOnTree,\n  TreeDestinationPosition,\n  TreeSourcePosition,\n} from \"@atlaskit/tree\";\nimport produce, { Draft } from \"immer\";\nimport { actionTypes as AT } from \"../actions\";\nimport {\n  Action,\n  EditableTimerData,\n  SectionTreeItemData,\n  TreeData,\n  TreeItem,\n} from \"../types\";\nimport { isSection, isTimer } from \"../utils\";\nimport { initState } from \"../initState\";\n\nconst initTreeItem: TreeItem = {\n  id: undefined,\n  children: [],\n  hasChildren: false,\n  isExpanded: false,\n  isChildrenLoading: false,\n};\n\nexport const getNewItemIds = (tree: TreeData, numIds: number) => {\n  const startNum = Object.keys(tree.items).length - 1;\n  const newIds: ItemId[] = [];\n  for (let i = startNum; i < numIds + startNum; i++) {\n    newIds.push(String(i));\n  }\n  return newIds;\n};\n\nexport const setNewItemOnTree = (\n  tree: TreeData,\n  parentId: ItemId,\n  data: EditableTimerData\n) => {\n  const newId = getNewItemIds(tree, 1)[0];\n  const newItem = produce(initTreeItem, (draft) => {\n    draft.id = newId;\n    draft.data = {\n      elapsedTime: 0,\n      comment: \"\",\n      ...data,\n    };\n  });\n  tree.items[parentId].children.push(newId);\n  tree.items[newId] = newItem;\n};\nexport const getAllChildrenIds = (\n  tree: TreeData,\n  parentItemId: ItemId\n): ItemId[] => {\n  return tree.items[parentItemId].children.reduce(\n    (accum, id) => {\n      if (tree.items[id].children.length > 0) {\n        return accum.concat(getAllChildrenIds(tree, id));\n      } else {\n        return [...accum, id];\n      }\n    },\n    [parentItemId]\n  );\n};\n\nexport const getItemFromPosition = (\n  tree: TreeData,\n  position: TreeDestinationPosition\n) => {\n  if (typeof position.index === \"undefined\") {\n    return tree.items[position.parentId];\n  } else {\n    const id = tree.items[position.parentId].children[position.index];\n    return tree.items[id];\n  }\n};\nexport const combineTwoTimersIntoSection = (\n  tree: TreeData,\n  src: TreeSourcePosition,\n  dst: TreeDestinationPosition\n) => {\n  // construct new section\n  const dstItem = getItemFromPosition(tree, dst);\n  const srcItem = getItemFromPosition(tree, src);\n  const newSectionId = getNewItemIds(tree, 1)[0];\n  const newSectionData: SectionTreeItemData = {\n    repeat: 1,\n    count: 0,\n    comment: \"\",\n  };\n  const newSection = {\n    ...initTreeItem,\n    id: newSectionId,\n    data: newSectionData,\n    children: [dstItem.id, srcItem.id],\n  };\n\n  const dstParentItem = Object.values(tree.items).find((item) =>\n    item.children.some((id) => id === dstItem.id)\n  );\n  const dstItemPosition = {\n    parentId: dstParentItem.id,\n    index: dstParentItem.children.findIndex((id) => id === dstItem.id),\n  };\n\n  // remove src deps\n  tree.items[src.parentId].children = tree.items[src.parentId].children.filter(\n    (id) => id !== srcItem.id\n  );\n  // replace dstItem.id to newSection\n  tree.items[dstItemPosition.parentId].children = tree.items[\n    dstItemPosition.parentId\n  ].children.map((id) => (id === dstItem.id ? newSectionId : id));\n\n  // add newSection\n  tree.items[newSectionId] = newSection;\n};\n\nexport const cleanseTree = (tree: TreeData) => {\n  for (const id of Object.keys(tree.items)) {\n    const item = tree.items[id];\n    if (item.children.length === 0 && isSection(item.data)) {\n      // remove item from its parent\n      const parentItem = Object.values(tree.items).find((it) =>\n        it.children.includes(item.id)\n      );\n      const parentId = parentItem.id;\n      const index = parentItem.children.findIndex((id) => id === item.id);\n      tree.items[parentId].children.splice(index, 1);\n      delete tree.items[id];\n    }\n  }\n};\n\nexport const isFullyCounted = (item: TreeItem) => {\n  if (isSection(item.data)) {\n    return item.data.count >= item.data.repeat;\n  } else {\n    return item.data.elapsedTime >= item.data.timeLimit;\n  }\n};\n\nexport const resetDescendant = (tree: TreeData, parentId: ItemId) => {\n  const parent = tree.items[parentId];\n  for (const id of parent.children) {\n    const child = tree.items[id];\n    if (isTimer(child.data)) child.data.elapsedTime = 0;\n    else {\n      child.data.count = 0;\n      resetDescendant(tree, child.id);\n    }\n  }\n};\n\nexport const countUp = (timerTree: TreeData) => {\n  const toBeCountedId = traverse(timerTree, timerTree.rootId);\n\n  if (typeof toBeCountedId === \"undefined\") return;\n  const item = timerTree.items[toBeCountedId];\n\n  if (isTimer(item.data)) {\n    item.data.elapsedTime++;\n  } else {\n    item.data.count++;\n    if (!isFullyCounted(item)) {\n      resetDescendant(timerTree, item.id);\n    }\n  }\n  const nextId = traverse(timerTree, timerTree.rootId);\n  if (nextId && isSection(timerTree.items[nextId].data)) {\n    countUp(timerTree);\n  }\n};\n\nexport const traverse = (\n  tree: TreeData,\n  rootId: ItemId\n): ItemId | undefined => {\n  const childIds = tree.items[rootId].children;\n  for (const id of childIds) {\n    const currItem = tree.items[id];\n    const isBelowRepeat = !isFullyCounted(currItem);\n\n    if (isTimer(currItem.data) && isBelowRepeat) return currItem.id;\n    else if (isSection(currItem.data)) {\n      const toBeCountedId = traverse(tree, currItem.id);\n      if (typeof toBeCountedId !== \"undefined\") return toBeCountedId;\n      else if (isBelowRepeat) return currItem.id;\n    }\n  }\n};\n\nconst removeItem = (tree: TreeData, id: ItemId) => {\n  const item = tree.items[id];\n  delete tree.items[id];\n  const { id: parentId, children } = Object.values(tree.items).find((v) =>\n    v.children.includes(id)\n  );\n  const itemIdx = children.findIndex((child) => child === id);\n  tree.items[parentId].children.splice(itemIdx, 1);\n  tree.items[parentId].hasChildren = tree.items[parentId].children.length > 0;\n  removeItemRecursive(tree, item.children);\n};\n\nconst removeItemRecursive = (tree: TreeData, ids: ItemId[]) => {\n  for (const id of ids) {\n    const item = tree.items[id];\n    delete tree.items[id];\n    if (isSection(item.data)) removeItemRecursive(tree, item.children);\n  }\n};\n\nexport const treeReducer = produce((tree: Draft<TreeData>, action: Action) => {\n  switch (action.type) {\n    case AT.ADD_TIMER: {\n      const { parentId, ...data } = action.payload;\n      setNewItemOnTree(tree, parentId, { ...data });\n      break;\n    }\n    case AT.REMOVE_ITEM: {\n      const { id } = action.payload;\n\n      removeItem(tree, id);\n      break;\n    }\n    case AT.EDIT_TIMER: {\n      const { editItemId, data } = action.payload;\n      const originalData = tree.items[editItemId].data;\n      const newData = { ...originalData, ...data };\n      if (isTimer(newData)) {\n        tree.items[editItemId].data = newData;\n      } else {\n        throw new TypeError(\n          `data:${JSON.stringify(newData)} must be TimerTreeItemData`\n        );\n      }\n      break;\n    }\n    case AT.EDIT_SECTION: {\n      const { editItemId, data } = action.payload;\n      const originalData = tree.items[editItemId].data;\n      const newData = { ...originalData, ...data };\n      if (isSection(newData)) {\n        tree.items[editItemId].data = newData;\n      } else {\n        throw new TypeError(\n          `data:${JSON.stringify(data)} must be SectionTreeItemData`\n        );\n      }\n      break;\n    }\n    case AT.ON_DRAG_END: {\n      const src = action.payload.source;\n      const dst = action.payload.destination;\n      if (!dst) break;\n\n      const dstItem = getItemFromPosition(tree, dst);\n\n      if (typeof dst.index === \"undefined\" && isTimer(dstItem.data)) {\n        combineTwoTimersIntoSection(tree, src, dst);\n        break;\n      } else {\n        return moveItemOnTree(tree, src, dst);\n      }\n    }\n    case AT.TOGGLE_PROPERTY: {\n      const { id, prop } = action.payload;\n\n      const flag = tree.items[id][prop];\n      tree.items[id][prop] = !flag;\n      break;\n    }\n    case AT.CLEANSE_TREE: {\n      cleanseTree(tree);\n      break;\n    }\n    case AT.ADD_TIME: {\n      countUp(tree);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n}, initState.tree);\n","import produce from \"immer\";\nimport { initState } from \"../initState\";\nimport { Action, Options } from \"../types\";\nimport { actionTypes as AT } from \"../actions\";\nconst { options } = initState;\nexport const optionsReducer = produce((options: Options, action: Action) => {\n  switch (action.type) {\n    case AT.TOGGLE_IS_DRAG_ENABLED: {\n      options.isDragEnabled = !options.isDragEnabled;\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n}, options);\n","import { combineReducers } from \"redux\";\nimport { treeReducer } from \"./treeReducer\";\nimport { optionsReducer } from \"./optionsReducer\";\nexport const reducer = combineReducers({\n  tree: treeReducer,\n  options: optionsReducer,\n});\n","import { createStore } from \"redux\";\nimport { reducer } from \"./reducers/rootReducer\";\n\nexport const store = createStore(reducer);\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Main } from \"./components/main\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./store\";\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#f55333\",\n    },\n    secondary: {\n      main: \"#062457\",\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Main />\n      </ThemeProvider>\n    </Provider>\n  );\n};\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}