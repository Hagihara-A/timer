{"version":3,"sources":["actions.ts","components/AddTimerDialog.tsx","components/Timer/TimerList.tsx","components/Timer/TimerListButtons.tsx","components/Tree/EditableContent.tsx","components/Tree/TimerTree.tsx","components/Tree/TimerTreeButtons.tsx","components/main.tsx","serviceWorker.js","initState.ts","reducers/timersReducer.ts","reducers/treeReducer.ts","reducers/rootReducer.ts","store.js","index.tsx"],"names":["actionTypes","editItem","editItemId","data","type","payload","useStyles","makeStyles","root","margin","AddTimerDialog","open","onClose","onSubmit","classes","useState","times","setTimes","timeLimit","setTimeLimit","power","setPower","Dialog","DialogTitle","DialogContent","TextField","value","onChange","e","Number","target","variant","label","inputProps","min","className","DialogActions","Button","onClick","AnimatedTyporaphy","animated","Typography","TimerList","timers","useSelector","state","useSprings","length","fontSize","springs","ListItems","map","spring","idx","item","style","key","id","textAlign","useIconStyles","TimerListIcons","onClickStart","onClickSkip","onClickStop","onClickReset","IconButton","color","EditableInput","isEditing","setIsEditing","onKeyDown","keyCode","onBlur","EditableSection","val","dispatch","useDispatch","EditableTimer","itemId","EditableContent","tree","items","children","isSection","TreeContainer","styled","div","ItemContainer","props","depth","Icon","onExpand","onCollapse","isExpanded","Content","renderItem","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","TimerTree","console","log","toggleIsExpanded","prop","Tree","isDragEnabled","isNestingEnabled","onDragEnd","source","destination","removeItem","onDragEndAction","TimerTreeIcons","onClickAdd","onClickComplete","Heading","align","lineHeight","TimerApp","isTree","setIsTree","isOpenModal","setIsOpenModal","toggleIsTree","toggleIsOpen","slideToTimerList","startTimerDispatch","skipTimerDisparch","resetTimerDispatch","stopTimerDispatch","View","useTransition","from","opacity","xy","enter","leave","transform","to","x","y","position","left","right","width","bottom","parentId","treeItemData","Main","Boolean","window","location","hostname","match","initState","rootId","hasChildren","isChildrenLoading","comment","undefined","flattenTree","timersReducer","action","initTreeItem","getNewItemIds","numIds","startNum","Object","keys","newIds","i","push","String","treeReducer","produce","AT","newId","newItem","draft","setNewItemOnTree","index","allChildIds","getAllChildrenIds","parentItemId","reduce","accum","concat","splice","originalData","moveItemOnTree","original","flag","rootReducer","store","createStore","theme","createMuiTheme","palette","primary","main","secondary","responsiveFontSizes","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f143eada.chunk.js","sourcesContent":["import {\n  ItemId,\n  TreeData,\n  TreeDestinationPosition,\n  TreeSourcePosition\n} from \"@atlaskit/tree\";\nimport { Timers, TimerTreeItemData } from \"./types\";\n\nexport const actionTypes = {\n  START: \"START\",\n  PAUSE: \"PAUSE\",\n  RESET: \"RESET\",\n  FINISH: \"FINISH\",\n  ADD_TIMER: \"ADD_TIMER\",\n  SET_TIMERS: \"SET_TIMERS\",\n  SET_TREE: \"SET_TREE\",\n  ADD_TREE_ITEM: \"ADD_TREE_ITEM\",\n  ADD_SECTION: \"ADD_SECTION\",\n  REMOVE_ITEM: \"REMOVE_ITEM\",\n  EDIT_ITEM: \"EDIT_ITEM\",\n  COPY_ITEM: \"COPY_ITEM\",\n  ON_DRAG_END: \"ON_DRAG_END\",\n  TOGGLE_PROPERTY: \"TOGGLE_PROPERTY\",\n  FLATTEN_TREE: \"FLATTEN_TREE\"\n} as const;\n\nexport const startTimer = () => {\n  return {\n    type: actionTypes.START\n  };\n};\nexport const stopTimer = () => {\n  return {\n    type: actionTypes.PAUSE\n  };\n};\nexport const resetTimer = () => {\n  return {\n    type: actionTypes.RESET\n  };\n};\nexport const finishTimer = () => {\n  return {\n    type: actionTypes.FINISH\n  };\n};\nexport const addTimer = (parentId: ItemId, timeLimit: number) => {\n  return {\n    type: actionTypes.ADD_TIMER,\n    payload: {\n      parentId,\n      timeLimit\n    }\n  };\n};\nexport const setTimers = (timers: Timers) => {\n  return {\n    type: actionTypes.SET_TIMERS,\n    payload: {\n      timers\n    }\n  };\n};\n\nexport const setTree = (tree: TreeData) => {\n  return {\n    type: actionTypes.SET_TREE,\n    payload: {\n      tree\n    }\n  };\n};\n\nexport const addTreeItem = (\n  parentId: ItemId,\n  treeItemData: Pick<TimerTreeItemData, \"timeLimit\" | \"times\" | \"power\">\n) => {\n  return {\n    type: actionTypes.ADD_TREE_ITEM,\n    payload: {\n      parentId,\n      ...treeItemData\n    }\n  };\n};\nexport const addSection = (parentId: ItemId, title: number) => {\n  return {\n    type: actionTypes.ADD_SECTION,\n    payload: {\n      parentId,\n      title\n    }\n  };\n};\nexport const removeItem = (source: TreeSourcePosition) => {\n  return {\n    type: actionTypes.REMOVE_ITEM,\n    payload: {\n      source\n    }\n  };\n};\nexport const editItem = (\n  editItemId: ItemId,\n  data: Partial<TimerTreeItemData>\n) => {\n  return {\n    type: actionTypes.EDIT_ITEM,\n    payload: {\n      editItemId,\n      data\n    }\n  };\n};\nexport const copyItem = (originItemId: ItemId) => {\n  return {\n    type: actionTypes.COPY_ITEM,\n    payload: {\n      originItemId\n    }\n  };\n};\nexport const onDragEnd = (\n  source: TreeSourcePosition,\n  destination: TreeDestinationPosition\n) => {\n  return {\n    type: actionTypes.ON_DRAG_END,\n    payload: {\n      source,\n      destination\n    }\n  };\n};\n\nexport const toggleProperty = (\n  id: ItemId,\n  prop: \"isExpanded\" | \"isChildrenLoading\" | \"hasChildren\"\n) => {\n  return {\n    type: actionTypes.TOGGLE_PROPERTY,\n    payload: {\n      id,\n      prop\n    }\n  };\n};\n\nexport const parseTreeToTimers = () => {\n  return {\n    type: actionTypes.FLATTEN_TREE\n  };\n};\n","import {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  makeStyles,\n  DialogActions,\n  Button\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nconst useStyles = makeStyles({\n  root: {\n    margin: \"10px\"\n  }\n});\nexport const AddTimerDialog = ({\n  open,\n  onClose,\n  onSubmit\n}: {\n  open: boolean;\n  onClose: () => void;\n  onSubmit: (times: number, time: number, power: number) => void;\n}) => {\n  const classes = useStyles();\n  const [times, setTimes] = useState(0);\n  const [timeLimit, setTimeLimit] = useState(0);\n  const [power, setPower] = useState(0);\n\n  const onClickOK = () => {\n    if (times > 0 && timeLimit > 0 && power > 0) {\n      onSubmit(times, timeLimit, power);\n    }\n    onClose();\n  };\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Input new Timer</DialogTitle>\n      <DialogContent>\n        <TextField\n          value={times}\n          onChange={e => setTimes(Number(e.target.value))}\n          variant=\"outlined\"\n          label=\"Repeat\"\n          inputProps={{\n            type: \"number\",\n            min: 1\n          }}\n          className={classes.root}\n        />\n        <br />\n        <TextField\n          value={timeLimit}\n          onChange={e => setTimeLimit(Number(e.target.value))}\n          variant=\"outlined\"\n          label=\"TimeLimit\"\n          inputProps={{ type: \"number\", min: 1 }}\n          className={classes.root}\n        />\n        <br />\n        <TextField\n          value={power}\n          onChange={e => setPower(Number(e.target.value))}\n          variant=\"outlined\"\n          label=\"Power\"\n          inputProps={{ type: \"number\", min: 1 }}\n          className={classes.root}\n        />\n        <br />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClickOK}>OK!</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { animated, useSprings } from \"react-spring\";\nimport { State } from \"../../types\";\n\nconst AnimatedTyporaphy = animated(Typography);\n\nexport const TimerList = () => {\n  const timers = useSelector((state: State) => state.timers);\n\n  const [springs, set] = useSprings(timers.length, () => ({\n    fontSize: \"1rem\"\n  }));\n  const ListItems = springs.map((spring, idx) => {\n    const item = timers[idx].item;\n    const { timeLimit, power, times } = item.data;\n    return (\n      <AnimatedTyporaphy style={spring} key={item.id}>\n        {`${times} x ${timeLimit} sec at ${power} W`}\n      </AnimatedTyporaphy>\n    );\n  });\n  return <div style={{ textAlign: \"center\" }}>{ListItems}</div>;\n};\n","import { IconButton, makeStyles } from \"@material-ui/core\";\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport React from \"react\";\n\nconst useIconStyles = makeStyles({\n  root: {\n    fontSize: \"5rem\"\n  }\n});\n\nexport const TimerListIcons = ({\n  onClickStart,\n  onClickSkip,\n  onClickStop,\n  onClickReset\n}: {\n  onClickStart: () => void;\n  onClickSkip: () => void;\n  onClickStop: () => void;\n  onClickReset: () => void;\n}) => {\n  const classes = useIconStyles();\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={onClickStart}>\n        <PlayCircleFilledWhiteIcon className={classes.root} color=\"primary\" />\n      </IconButton>\n      <IconButton onClick={onClickSkip}>\n        <SkipNextIcon className={classes.root} color=\"primary\" />\n      </IconButton>\n      <IconButton onClick={onClickStop}>\n        <StopIcon className={classes.root} color=\"primary\" />\n      </IconButton>\n      <IconButton onClick={onClickReset}>\n        <RotateLeftIcon className={classes.root} color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n};\n","import { ItemId, TreeItem } from \"@atlaskit/tree\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editItem } from \"../../actions\";\nimport { State } from \"../../types\";\n\nconst EditableInput = ({\n  value,\n  onChange,\n  inputProps\n}: {\n  value: string | number;\n  onChange: any;\n  inputProps?: any;\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const onKeyDown = e => {\n    if (e.keyCode === 13) {\n      setIsEditing(!isEditing);\n    }\n  };\n  const onBlur = () => {\n    setIsEditing(false);\n  };\n  const onClick = e => setIsEditing(!isEditing);\n  return (\n    <span>\n      {isEditing ? (\n        <TextField\n          value={value}\n          inputProps={inputProps}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          onBlur={onBlur}\n        />\n      ) : (\n        <span onClick={onClick}>&nbsp; {value} &nbsp;</span>\n      )}\n    </span>\n  );\n};\n\nconst EditableSection = ({ item }: { item: TreeItem }) => {\n  const val = item.data.times;\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(editItem(item.id, { times: Number(e.target.value) }));\n  };\n  return (\n    <span>\n      <EditableInput\n        value={val}\n        onChange={onChange}\n        inputProps={{ type: \"number\", min: 1 }}\n      />\n      {\" Times\"}\n    </span>\n  );\n};\n\nconst EditableTimer = ({ item }: { item: TreeItem }) => {\n  const dispatch = useDispatch();\n\n  const itemId = item.id;\n  const { times, power, timeLimit } = item.data;\n\n  const onChangeTimes = e => {\n    dispatch(editItem(itemId, { times: e.target.value }));\n  };\n  const onChangeTimeLimit = e => {\n    dispatch(editItem(itemId, { timeLimit: e.target.value }));\n  };\n  const onChangePower = e => {\n    dispatch(editItem(itemId, { power: e.target.value }));\n  };\n  return (\n    <span>\n      <EditableInput\n        value={times}\n        onChange={onChangeTimes}\n        inputProps={{ type: \"number\", min: 1 }}\n      />\n      {\"x\"}\n      <EditableInput\n        value={timeLimit}\n        onChange={onChangeTimeLimit}\n        inputProps={{ type: \"number\", min: 1 }}\n      />\n      {\"Sec @\"}\n      <EditableInput\n        value={power}\n        onChange={onChangePower}\n        inputProps={{ type: \"number\", min: 1 }}\n      />\n      {\" W\"}\n    </span>\n  );\n};\n\nexport const isSection = (item: TreeItem) => item.children.length > 0;\n\nconst EditableContent = ({ itemId }: { itemId: ItemId }) => {\n  const item = useSelector((state: State) => state.tree.items[itemId]);\n  return isSection(item) ? (\n    <EditableSection item={item} />\n  ) : (\n    <EditableTimer item={item} />\n  );\n};\n\nexport default EditableContent;\n","import Tree, {\n  ItemId,\n  RenderItemParams,\n  TreeDestinationPosition,\n  TreeItem,\n  TreeSourcePosition\n} from \"@atlaskit/tree\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  onDragEnd as onDragEndAction,\n  toggleProperty,\n  removeItem\n} from \"../../actions\";\nimport { State } from \"../../types\";\nimport EditableContent from \"./EditableContent\";\nconst TreeContainer = styled.div`\n  max-width: 300px;\n  margin: auto;\n`;\nconst ItemContainer = styled.div<any>`\n  border-radius: 2px;\n  margin: 1px 0;\n  background-color: hsl(${props => 40 - props.depth * 15}, 50%, 50%);\n`;\nconst Icon = ({ item, onExpand, onCollapse, depth }) => {\n  if (item.children && item.children.length > 0) {\n    return item.isExpanded ? (\n      <ArrowDropDownIcon onClick={() => onCollapse(item.id)} color=\"primary\" />\n    ) : (\n      <ArrowRightIcon onClick={() => onExpand(item.id)} color=\"primary\" />\n    );\n  } else {\n    return <span> &bull; </span>;\n  }\n};\n\nconst Content = ({ item }: { item: TreeItem }) => {\n  return <EditableContent itemId={item.id} />;\n};\n\nconst renderItem = ({\n  item,\n  depth,\n  onExpand,\n  onCollapse,\n  provided,\n  snapshot\n}: RenderItemParams) => {\n  return (\n    <ItemContainer\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n      depth={depth}\n    >\n      <Icon\n        item={item}\n        onExpand={onExpand}\n        onCollapse={onCollapse}\n        depth={depth}\n      />\n      <Content item={item} />\n    </ItemContainer>\n  );\n};\n\nconst TimerTree = () => {\n  const dispatch = useDispatch();\n  const tree = useSelector((state: State) => state.tree);\n  console.log(tree);\n\n  const toggleIsExpanded = (itemId: ItemId) => {\n    dispatch(toggleProperty(itemId, \"isExpanded\"));\n  };\n  const onDragEnd = (\n    source: TreeSourcePosition,\n    destination: TreeDestinationPosition\n  ) => {\n    if (!destination) dispatch(removeItem(source));\n    dispatch(onDragEndAction(source, destination));\n  };\n\n  return (\n    <TreeContainer>\n      <Tree\n        tree={tree}\n        renderItem={renderItem}\n        isDragEnabled\n        isNestingEnabled\n        onCollapse={toggleIsExpanded}\n        onExpand={toggleIsExpanded}\n        onDragEnd={onDragEnd}\n      />\n    </TreeContainer>\n  );\n};\n\nexport default TimerTree;\n","import { IconButton, makeStyles } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport React from \"react\";\n\nconst useIconStyles = makeStyles({\n  root: {\n    fontSize: \"5rem\"\n  }\n});\n\nexport const TimerTreeIcons = ({\n  onClickAdd,\n  onClickComplete\n}: {\n  onClickAdd: () => void;\n  onClickComplete: () => void;\n}) => {\n  const classes = useIconStyles();\n  return (\n    <div>\n      <IconButton onClick={onClickAdd}>\n        <AddCircleIcon className={classes.root} color=\"primary\" />\n      </IconButton>\n      <IconButton onClick={onClickComplete}>\n        <CheckCircleIcon className={classes.root} color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n};\n","import { styled, Typography } from \"@material-ui/core\";\nimport produce from \"immer\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { animated, useTransition } from \"react-spring\";\nimport {\n  addTreeItem,\n  finishTimer,\n  parseTreeToTimers,\n  startTimer,\n  stopTimer\n} from \"../actions\";\nimport { AddTimerDialog } from \"./AddTimerDialog\";\nimport { TimerList } from \"./Timer/TimerList\";\nimport { TimerListIcons } from \"./Timer/TimerListButtons\";\nimport TimerTree from \"./Tree/TimerTree\";\nimport { TimerTreeIcons } from \"./Tree/TimerTreeButtons\";\nconst Heading = styled(({ children }) => (\n  <Typography variant=\"h1\" align=\"center\">\n    {children}\n  </Typography>\n))({\n  lineHeight: \"initial\"\n});\n\nconst TimerApp = () => {\n  const [isTree, setIsTree] = useState(true);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const toggleIsTree = () => setIsTree(!isTree);\n  const toggleIsOpen = () => setIsOpenModal(!isOpenModal);\n\n  const dispatch = useDispatch();\n\n  // TimerTreeButton callback\n  const addTimer = (times: number, timeLimit: number, power: number) => {\n    dispatch(addTreeItem(\"root\", { times, power, timeLimit }));\n  };\n\n  const slideToTimerList = () => {\n    dispatch(parseTreeToTimers());\n    toggleIsTree();\n  };\n\n  // TimerList callback\n  const startTimerDispatch = () => {\n    dispatch(startTimer());\n  };\n\n  const skipTimerDisparch = () => {\n    dispatch(finishTimer());\n  };\n\n  const resetTimerDispatch = () => {\n    toggleIsTree();\n  };\n\n  const stopTimerDispatch = () => {\n    dispatch(stopTimer());\n  };\n\n  const transitions = useTransition(isTree, null, {\n    from: {\n      opacity: 0,\n      xy: isTree ? [-100, 0] : [100, 0]\n    },\n    enter: { opacity: 1, xy: [0, 0] },\n    leave: {\n      opacity: 0,\n      xy: isTree ? [50, 0] : [-50, 0]\n    }\n  });\n\n  const View = transitions.map(({ item, key, props }) => {\n    return (\n      <div key={key}>\n        <animated.div\n          style={{\n            ...props,\n            transform: props.xy.to((x, y) =>\n              x === 0 && y === 0 ? \"none\" : `translate(${x}%, ${y}%)`\n            ),\n            position: \"absolute\",\n            left: 0,\n            right: 0\n          }}\n        >\n          {item ? <TimerTree /> : <TimerList />}\n        </animated.div>\n\n        <animated.div\n          style={{\n            opacity: props.opacity,\n            position: \"fixed\",\n            width: \"100%\",\n            textAlign: \"center\",\n            bottom: \"10px\"\n          }}\n        >\n          {item ? (\n            <TimerTreeIcons\n              onClickAdd={toggleIsOpen}\n              onClickComplete={slideToTimerList}\n            />\n          ) : (\n            <TimerListIcons\n              onClickStart={startTimerDispatch}\n              onClickSkip={skipTimerDisparch}\n              onClickStop={stopTimerDispatch}\n              onClickReset={resetTimerDispatch}\n            />\n          )}\n        </animated.div>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <Heading>Training Timer</Heading>\n      {View}\n      <AddTimerDialog\n        open={isOpenModal}\n        onClose={toggleIsOpen}\n        onSubmit={addTimer}\n      />\n    </div>\n  );\n};\n\nexport const Main = () => <TimerApp />;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { flattenTree } from \"@atlaskit/tree/dist/cjs/utils/tree\";\n\nexport const initState = {\n  tree: {\n    rootId: \"root\",\n    items: {\n      root: {\n        id: \"root\",\n        children: [\"0\", \"1\", \"2\", \"3\"],\n        hasChildren: true,\n        isExpanded: true,\n        isChildrenLoading: false\n      },\n      \"0\": {\n        id: \"0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          timeLimit: 3,\n          times: 1,\n          power: 130,\n          comment: \"\"\n        }\n      },\n      \"1\": {\n        id: \"1\",\n        children: [\"1-0\", \"1-1\"],\n        hasChildren: true,\n        isExpanded: true,\n        isChildrenLoading: false,\n        data: {\n          timeLimit: 0,\n          times: 1,\n          power: 0,\n          comment: \"\"\n        }\n      },\n      \"1-0\": {\n        id: \"1-0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          timeLimit: 2,\n          times: 1,\n          power: 260,\n          comment: \"\"\n        }\n      },\n      \"1-1\": {\n        id: \"1-1\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          timeLimit: 2,\n          times: 1,\n          power: 260,\n          comment: \"\"\n        }\n      },\n      \"2\": {\n        id: \"2\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          timeLimit: 5,\n          times: 1,\n          power: 260,\n          comment: \"\"\n        }\n      },\n      \"3\": {\n        id: \"3\",\n        children: [\"3-0\", \"3-1\", \"3-2\"],\n        hasChildren: false,\n        isExpanded: true,\n        isChildrenLoading: false,\n        data: {\n          timeLimit: 0,\n          times: 1,\n          power: 0,\n          comment: \"\"\n        }\n      },\n      \"3-0\": {\n        id: \"3-0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          timeLimit: 2,\n          times: 1,\n          power: 150,\n          comment: \"\"\n        }\n      },\n      \"3-1\": {\n        id: \"3-1\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          timeLimit: 2,\n          times: 1,\n          power: 150,\n          comment: \"\"\n        }\n      },\n      \"3-2\": {\n        id: \"3-2\",\n        children: [\"3-2-0\", \"3-2-1\"],\n        hasChildren: true,\n        isExpanded: true,\n        isChildrenLoading: false,\n        data: {\n          timeLimit: 0,\n          times: 1,\n          power: 0,\n          comment: \"\"\n        }\n      },\n      \"3-2-0\": {\n        id: \"3-2-0\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          timeLimit: 3,\n          times: 1,\n          power: 150,\n          comment: \"\"\n        }\n      },\n      \"3-2-1\": {\n        id: \"3-2-1\",\n        children: [],\n        hasChildren: false,\n        isExpanded: false,\n        isChildrenLoading: false,\n        data: {\n          timeLimit: 3,\n          times: 1,\n          power: 150,\n          comment: \"\"\n        }\n      }\n    }\n  },\n  timers: undefined\n};\n\ninitState.timers = flattenTree(initState.tree);\n","import { Draft } from \"immer\";\nimport { initState } from \"../initState\";\nimport { Action, Timers } from \"../types\";\nexport const timersReducer = (\n  timers: Draft<Timers> = initState.timers,\n  action: Action\n) => {\n  switch (action.type) {\n    default:\n      return timers;\n  }\n};\n","import {\n  ItemId,\n  moveItemOnTree,\n  TreeDestinationPosition,\n  TreeItem,\n  TreeSourcePosition\n} from \"@atlaskit/tree\";\nimport produce, { Draft, original } from \"immer\";\nimport { actionTypes as AT } from \"../actions\";\nimport { Action, TimerTreeData as TreeData } from \"../types\";\n\nconst initTreeItem: TreeItem = {\n  id: undefined,\n  children: [],\n  hasChildren: false,\n  isExpanded: false,\n  isChildrenLoading: false\n};\n\nexport const getNewItemIds = (tree: TreeData, numIds: number) => {\n  const startNum = Object.keys(tree.items).length - 1;\n  const newIds: ItemId[] = [];\n  for (let i = startNum; i < numIds + startNum; i++) {\n    newIds.push(String(i));\n  }\n  return newIds;\n};\n\nexport const setNewItemOnTree = (\n  tree: TreeData,\n  parentId: ItemId,\n  data = {}\n) => {\n  const newId = getNewItemIds(tree, 1)[0];\n  const newItem = produce(initTreeItem, draft => {\n    draft.id = newId;\n    draft.data = data;\n  });\n  tree.items[parentId].children.push(newId);\n  tree.items[newId] = newItem;\n};\nexport const getAllChildrenIds = (\n  tree: TreeData,\n  parentItemId: ItemId\n): ItemId[] => {\n  return tree.items[parentItemId].children.reduce(\n    (accum, id) => {\n      if (tree.items[id].children.length > 0) {\n        return accum.concat(getAllChildrenIds(tree, id));\n      } else {\n        return [...accum, id];\n      }\n    },\n    [parentItemId]\n  );\n};\n\nexport const treeReducer = produce((tree: Draft<TreeData>, action: Action) => {\n  switch (action.type) {\n    case AT.ADD_TREE_ITEM: {\n      const { parentId, ...data } = action.payload;\n      setNewItemOnTree(tree, parentId, { ...data });\n      return tree;\n    }\n    case AT.REMOVE_ITEM: {\n      const { parentId, index } = action.payload.source;\n\n      const allChildIds = getAllChildrenIds(\n        tree,\n        tree.items[parentId].children[index]\n      );\n      tree.items[parentId].children.splice(index, 1);\n\n      for (const id of allChildIds) {\n        delete tree.items[id];\n      }\n      return tree;\n    }\n    case AT.EDIT_ITEM: {\n      const { editItemId, data } = action.payload;\n      const originalData = tree.items[editItemId].data;\n      tree.items[editItemId].data = { ...originalData, ...data };\n      return tree;\n    }\n    case AT.ON_DRAG_END: {\n      const source: TreeSourcePosition = action.payload.source;\n      const destination: TreeDestinationPosition = action.payload.destination;\n      if (!destination) return tree;\n      // TODO remove original()\n      return moveItemOnTree(original(original(tree)), source, destination);\n    }\n    case AT.TOGGLE_PROPERTY: {\n      const { id, prop } = action.payload;\n\n      const flag = tree.items[id][prop];\n      tree.items[id][prop] = !flag;\n      return tree;\n    }\n    default: {\n      return tree;\n    }\n  }\n});\n","import { flattenTree } from \"@atlaskit/tree/dist/cjs/utils/tree\";\nimport produce, { Draft } from \"immer\";\nimport { actionTypes as AT } from \"../actions\";\nimport { initState } from \"../initState\";\nimport { Action, State } from \"../types\";\nimport { timersReducer } from \"./timersReducer\";\nimport { treeReducer } from \"./treeReducer\";\n\n// Child reducer should return draft state passed from parent reducer.\n// It doen't make a difference between `return draft` and `break`.Former is preferred.\nexport const rootReducer = produce((draft: Draft<State>, action: Action) => {\n  switch (action.type) {\n    case AT.FLATTEN_TREE: {\n      draft.timers = flattenTree(draft.tree);\n      return draft;\n    }\n    default: {\n      return {\n        tree: treeReducer(draft.tree, action),\n        timers: timersReducer(draft.timers, action)\n      };\n    }\n  }\n}, initState);\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"./reducers/rootReducer\";\n\nexport const store = createStore(rootReducer);\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Main } from \"./components/main\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./store\";\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#f55333\"\n    },\n    secondary: {\n      main: \"#062457\"\n    }\n  }\n});\n\ntheme = responsiveFontSizes(theme);\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Main />\n      </ThemeProvider>\n    </Provider>\n  );\n};\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}